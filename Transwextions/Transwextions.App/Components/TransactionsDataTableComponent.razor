@using System.Globalization
@using Transwextions.App.Services.Interfaces
@using Transwextions.Data.Models
@inject NotificationService _notificationService

<div class="component">
    <RadzenDataGrid TItem="TransactionModel"
                    Data="@TransactionsData"
                    AllowPaging="false"
                    AllowSorting="true"
                    Responsive="true"
                    IsLoading="@IsLoading"
                    ColumnWidth="200px"
                    EmptyText="No transactions yet.">

        <Columns>
            <RadzenDataGridColumn TItem="TransactionModel" Property="Guid" Title="Id" Width="200px">
                <Template Context="context">
                    @(context.UniqueIdentifier.ToString())
                </Template>
            </RadzenDataGridColumn>
            <RadzenDataGridColumn TItem="TransactionModel" Property="Description" Title="Details" />
            <RadzenDataGridColumn TItem="TransactionModel" Property="TransactionDate" Title="Transaction Date" Filterable="false">
                <Template Context="context">@context.TransactionDateUtc.ToString("yyyy-MM-dd")</Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="TransactionModel" Title="Amount (USD)" Sortable="false" Filterable="false" TextAlign="TextAlign.Right" Width="160px">
                <Template Context="context">
                    @((context.AmountTotalCents / 100m).ToString("C", CultureInfo.GetCultureInfo("en-US")))
                </Template>
            </RadzenDataGridColumn>

            <RadzenDataGridColumn TItem="TransactionModel" Title="Actions" Filterable="false" Sortable="false" Width="140px">
                <Template Context="context">
                    <RadzenButton Size="ButtonSize.Small" Text="View" Click="@(() => View(context))" Style="margin-right:6px" />
                    <RadzenButton Size="ButtonSize.Small" Text="Delete" ButtonStyle="ButtonStyle.Danger" Click="@(() => Delete(context))" />
                </Template>
            </RadzenDataGridColumn>
        </Columns>
    </RadzenDataGrid>
</div>

@code {
    private readonly ITransactionService _transactionService;
    public TransactionsDataTableComponent(ITransactionService transactionService) => _transactionService = transactionService;

    private bool IsLoading;
    IEnumerable<TransactionModel> TransactionsData = Array.Empty<TransactionModel>();

    protected override async Task OnInitializedAsync()
    {
        await LoadData();
    }

    async Task LoadData()
    {
        IsLoading = true;

        var result = await _transactionService.GetAllAsync();
        if (!result.IsSuccess || result.Object is null)
        {
            _notificationService.Notify(new NotificationMessage
            {
                Severity = NotificationSeverity.Error,
                Summary = "Error",
                Detail = "Failed to load transactions:" + result.ErrorMessage,
                Duration = 4000
            });
            IsLoading = false;
            return;
        }

        TransactionsData = result.Object;

        IsLoading = false;
    }

    void View(TransactionModel t)
    {
        _notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Info, Summary = "View", Detail = $"{t.Id}" });
    }

    async Task Delete(TransactionModel t)
    {
        _notificationService.Notify(new NotificationMessage { Severity = NotificationSeverity.Success, Summary = "Deleted", Detail = $"{t.Id}" });
    }
}
