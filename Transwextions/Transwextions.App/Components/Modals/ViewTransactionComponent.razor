@using System.Globalization
<div class="component">
    @if (Transaction != null)
    {
        <RadzenCard>
            @if (IsLoadingConversionData)
            {
                <RadzenText Text="Loading conversion data..." />
                <RadzenProgressBarCircular ProgressBarStyle="ProgressBarStyle.Primary" Value="100" ShowValue="false" Mode="ProgressBarMode.Indeterminate" />
            }
            else
            {
                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" Gap="1rem" class="rz-p-2">
                    <RadzenIcon Icon="paid" Style="font-size: 100px;" />
                    <RadzenStack Gap="0">
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-2 rz-my-0">Txn ID</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>@(Transaction.UniqueIdentifier)</b></RadzenText>
                        <RadzenText TextStyle="TextStyle.Overline" class="rz-display-flex rz-mt-4 rz-mb-0">Txn Date</RadzenText>
                        <RadzenText TextStyle="TextStyle.Body1"><b>@Transaction.TransactionDateUtc</b></RadzenText>
                    </RadzenStack>
                </RadzenStack>
                <RadzenCard class="rz-background-color-primary-light rz-p-3 rz-mb-2">
                    <RadzenText TextStyle="TextStyle.H6" class="rz-color-on-primary-light"><strong>Transaction Details</strong></RadzenText>
                    <RadzenRow RowGap="0">
                        <RadzenColumn>
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Amount</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@((Transaction.AmountTotalCents / 100m).ToString("C", CultureInfo.GetCultureInfo("en-US")))</b></RadzenText>
                        </RadzenColumn>
                        <RadzenColumn>
                            <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Description</RadzenText>
                            <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@(Transaction.Description)</b></RadzenText>
                        </RadzenColumn>
                    </RadzenRow>
                    @if (ExchangeRate != null)
                    {
                        <RadzenText TextStyle="TextStyle.H6" class="rz-color-on-primary-light"><strong>Currency Conversion</strong></RadzenText>
                        <RadzenRow>
                            <RadzenColumn>
                                <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">@(SelectedCurrency)</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@(GetConvertedCurrencyValue())</b></RadzenText>
                            </RadzenColumn>
                            <RadzenColumn>
                                <RadzenText TextStyle="TextStyle.Overline" class="rz-color-on-primary-light rz-display-flex rz-mt-4 rz-mb-0">Exchange Record Date</RadzenText>
                                <RadzenText TextStyle="TextStyle.Body1" class="rz-color-on-primary-light"><b>@(ExchangeRecordDate)</b></RadzenText>
                            </RadzenColumn>
                        </RadzenRow>
                    }
                </RadzenCard>
                <RadzenStack Orientation="Orientation.Horizontal" JustifyContent="JustifyContent.Start" AlignItems="AlignItems.Center" Gap="0">
                    <RadzenText class="rz-mr-2" Text="Convert to Currency: " />
                    <RadzenDropDown Data="CurrenciesData" TValue="string" Value="SelectedCurrency" ValueChanged="@((arg) => CurrencyDropdown_OnChange(arg))" />
                </RadzenStack>
            }
        </RadzenCard>
    }
    else
    {
        <RadzenText Text="Transaction could not be loaded." />
    }
</div>